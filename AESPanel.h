// -*- C++ -*-
//
// generated by wxGlade 1.0.3 on Fri Nov 26 21:56:13 2021
//
// Example for compiling a single file project under Linux using g++:
//  g++ MyApp.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp
//
// Example for compiling a multi file project under Linux using g++:
//  g++ main.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp Dialog1.cpp Frame1.cpp
//

#ifndef AESPANEL_H
#define AESPANEL_H

#include <wx/wx.h>
#include <wx/image.h>

// begin wxGlade: ::dependencies
// end wxGlade

// begin wxGlade: ::extracode
// end wxGlade


class AESPanel: public wxPanel {
public:
  // begin wxGlade: AESPanel::ids
  enum {
    masterID = wxID_HIGHEST + 1000,
    wclkSyncID = wxID_HIGHEST + 1001,
    aes1SyncID = wxID_HIGHEST + 1002,
    aes2SyncID = wxID_HIGHEST + 1003,
    aes3SyncID = wxID_HIGHEST + 1004,
    aes4SyncID = wxID_HIGHEST + 1005,
    aes5SyncID = wxID_HIGHEST + 1006,
    aes6SyncID = wxID_HIGHEST + 1007,
    aes7SyncID = wxID_HIGHEST + 1008,
    aes8SyncID = wxID_HIGHEST + 1009,
    tcoSyncID = wxID_HIGHEST + 1010,
    syncInSyncID = wxID_HIGHEST + 1011,
    pitchID = wxID_HIGHEST + 1012,
    professionalID = wxID_HIGHEST + 1013,
    emphasisID = wxID_HIGHEST + 1014,
    nonAudioID = wxID_HIGHEST + 1015,
    singleSpeedWclkID = wxID_HIGHEST + 1016,
    dsModeID = wxID_HIGHEST + 1017,
    tmsID = wxID_HIGHEST + 1018,
    qsModeID = wxID_HIGHEST + 1019,
  };
  // end wxGlade

  AESPanel(wxWindow* parent, wxWindowID id, const wxPoint& pos=wxDefaultPosition, const wxSize& size=wxDefaultSize, long style=0);

private:

protected:
  // begin wxGlade: AESPanel::attributes
  wxStaticText* clockSourceLabel;
  wxStaticText* sampleRateLabel;
  wxStaticText* bufferSizeLabel;
  wxStaticText* fwVersionLabel;
  wxRadioButton* masterButton;
  wxStaticText* internalFreqLabel;
  wxChoice* internalFreqChoice;
  wxStaticBitmap* internalWarn;
  wxRadioButton* wclkSyncButton;
  wxStaticText* wclkStatusLabel;
  wxStaticText* wclkFreqLabel;
  wxStaticBitmap* wclkWarn;
  wxRadioButton* aes1SyncButton;
  wxStaticText* aes1StatusLabel;
  wxStaticText* aes1FreqLabel;
  wxStaticBitmap* aes1Warn;
  wxRadioButton* aes2SyncButton;
  wxStaticText* aes2StatusLabel;
  wxStaticText* aes2FreqLabel;
  wxStaticBitmap* aes2Warn;
  wxRadioButton* aes3SyncButton;
  wxStaticText* aes3StatusLabel;
  wxStaticText* aes3FreqLabel;
  wxStaticBitmap* aes3Warn;
  wxRadioButton* aes4SyncButton;
  wxStaticText* aes4StatusLabel;
  wxStaticText* aes4FreqLabel;
  wxStaticBitmap* aes4Warn;
  wxRadioButton* aes5SyncButton;
  wxStaticText* aes5StatusLabel;
  wxStaticText* aes5FreqLabel;
  wxStaticBitmap* aes5Warn;
  wxRadioButton* aes6SyncButton;
  wxStaticText* aes6StatusLabel;
  wxStaticText* aes6FreqLabel;
  wxStaticBitmap* aes6Warn;
  wxRadioButton* aes7SyncButton;
  wxStaticText* aes7StatusLabel;
  wxStaticText* aes7FreqLabel;
  wxStaticBitmap* aes7Warn;
  wxRadioButton* aes8SyncButton;
  wxStaticText* aes8StatusLabel;
  wxStaticText* aes8FreqLabel;
  wxStaticBitmap* aes8Warn;
  wxRadioButton* tcoSyncButton;
  wxStaticText* tcoStatusLabel;
  wxStaticText* tcoFreqLabel;
  wxStaticBitmap* tcoWarn;
  wxRadioButton* syncInSyncButton;
  wxStaticText* syncInStatusLabel;
  wxStaticText* syncInFreqLabel;
  wxStaticBitmap* syncInWarn;
  wxSlider* pitchSlider;
  wxCheckBox* professionalButton;
  wxCheckBox* emphasisButton;
  wxCheckBox* nonAudioButton;
  wxCheckBox* singleSpeedWclkButton;
  wxRadioBox* dsModeBox;
  wxCheckBox* tmsButton;
  wxRadioBox* qsModeBox;
  // end wxGlade

  DECLARE_EVENT_TABLE();

public:
  virtual void masterCB(wxCommandEvent &event); // wxGlade: <event_handler>
  virtual void internalFreqCB(wxCommandEvent &event); // wxGlade: <event_handler>
  virtual void wclkSyncCB(wxCommandEvent &event); // wxGlade: <event_handler>
  virtual void aes1SyncCB(wxCommandEvent &event); // wxGlade: <event_handler>
  virtual void aes2SyncCB(wxCommandEvent &event); // wxGlade: <event_handler>
  virtual void aes3SyncCB(wxCommandEvent &event); // wxGlade: <event_handler>
  virtual void aes4SyncCB(wxCommandEvent &event); // wxGlade: <event_handler>
  virtual void aes5SyncCB(wxCommandEvent &event); // wxGlade: <event_handler>
  virtual void aes6SyncCB(wxCommandEvent &event); // wxGlade: <event_handler>
  virtual void aes7SyncCB(wxCommandEvent &event); // wxGlade: <event_handler>
  virtual void aes8SyncCB(wxCommandEvent &event); // wxGlade: <event_handler>
  virtual void tcoSyncCB(wxCommandEvent &event); // wxGlade: <event_handler>
  virtual void syncInSyncCB(wxCommandEvent &event); // wxGlade: <event_handler>
  virtual void pitchDownCB(wxScrollEvent &event); // wxGlade: <event_handler>
  virtual void pitchUpCB(wxScrollEvent &event); // wxGlade: <event_handler>
  virtual void pitchPrevCB(wxScrollEvent &event); // wxGlade: <event_handler>
  virtual void pitchNextCB(wxScrollEvent &event); // wxGlade: <event_handler>
  virtual void pitchSliderCB(wxCommandEvent &event); // wxGlade: <event_handler>
  virtual void professionalCB(wxCommandEvent &event); // wxGlade: <event_handler>
  virtual void emphasisCB(wxCommandEvent &event); // wxGlade: <event_handler>
  virtual void nonAudioCB(wxCommandEvent &event); // wxGlade: <event_handler>
  virtual void singleSpeedWclkOutCB(wxCommandEvent &event); // wxGlade: <event_handler>
  virtual void dsModeCB(wxCommandEvent &event); // wxGlade: <event_handler>
  virtual void tmsCB(wxCommandEvent &event); // wxGlade: <event_handler>
  virtual void qsModeCB(wxCommandEvent &event); // wxGlade: <event_handler>
}; // wxGlade: end class


#endif // AESPANEL_H
